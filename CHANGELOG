* Ensure getAttribute() returns an empty string for null/undefined attributes. [jddalton]

* Only fix Safari bug with `:selected` when the context is from an html document. [jddalton]

* Fix regression by ensuring `ID optimization RTL` in select_regular() passes the context to match(). [jddalton]

* Add setERR() method to enable/disable internal error notification to console for invalid selectors. [Diego Perini]

* Avoid using slice.call() on nodeLists in Opera 9.25 because they could return an empty array if the nodeList length property is an element. [jddalton]

* Optimize select_qsa() and id, name, and class selectors for non html elements. [jddalton]

* Make IE6/7 not use gEBN because changes to the name attribute aren't reflected by the gEBN results. [Diego Perini, jddalton]

* Ensure `NWID` is not assigned to non-html documents because that could throw an error. [jddalton]

* Make `:selected` an alias of `:checked`. [jddalton]

* Fix regression bug with `HOST_SIGNATURE`. [jddalton]

* Set `ctx_data` even when mutation events are not supported. [jddalton]

* Add `RE_BUGGY_QSA` test for QSA not detecting selected options via the `:checked` pseudo. [Alex Russell, jddalton]

* Remove support for `:selected` as CSS3 draft spec merges it with `:checked`. [Alex Russell, jddalton]

* Improved `:focus` pseudo's resolution by adding `A` and `AREA` elements as focusable. [Diego Perini, jddalton]

* Add `OPTIMIZE_CLASS_FIRST` flag so IE8 will optimize by className before tagName in select_regular(). [jddalton]

* Ensure select_qsa() removes non-elements from IE8 results. [jddalton]

* Add QSA fork of byClass() and simply `ctx_notHTML` forks in byClass(), byId(), and byName(). [jddalton] 

* Ensure setCache() and expireCache() don't throw errors in browsers that don't support DOM mutation events. [jddalton]

* Ensure byName() works with disconnected nodes as context. [jddalton]

* Fix regression in ID optimizers for selectors like `#foo.bar.baz`. [jddalton]

* Make sure classNames resolve correctly for forms that have children with name="className". [jddalton, pdanpdan]

* Ensure public byClass(), byId(), byName(), byTag(), expireCache(), and setCache() call changeContext() when needed. [jddalton]

* Reduce the number of expandos set on context documents for result caching. [jddalton]

* Optimize IE8 by skipping `RE_SIMPLE_SELECTOR` for classNames and allowing it to use QSA. [jddalton]

* Make select_regular() swap `TAG optimization RTL` and `CLASS optimization RTL` checks if `NATIVE_GEBCN` is false to give IE a performance boost. [Diego Perini, jddalton]

* Simplify `RE_SIMPLE_SELECTOR` removing checks for buggy API. [Diego Perini, jddalton]

* Make byClass(), byName(), and byTag() convert nodeLists to arrays to improve element access times. [jddalton]

* Avoid critical error in select_regular() if selector contains trailing commas like `div,`. [jddalton]

* Add check to `RE_BUGGY_QSA` for Opera not respecting `valign` attribute value insensitivity in HTML. [jddalton]

* Make compileSelector() add element node checks for selectors like `* + *` or `* ~ *`. [jddalton]

* Ensure select_regular() doesn't cache an optimized selector. [jddalton]

* Ensure the `selector` argument of select()/match() is not undefined/null. [jddalton]

* Update jQuery adapters to support the `header/footer` properties and make `:has`, `:first`, and `:last` work with non tagName selectors. [jddalton]

* Remove document check from `:lang` selector. [Diego Perini]

* Make `:contains`, `:not`, and `:lang` return an empty array if nothing is passed in their parenthesis (:lang(), :not("")) . [jddalton]

* Make select_regular() `ID optimization RTL` use `re_optimizeIdAtEnd`, replace overlooked `selector` variables with `normalized`, and ensure ID optimizations skip ID selectors with pseudos attached. [jddalton]

* Revert `lastNormalized` usage in match() because of issues when match() calls select(). [jddalton]

* Give compileSelector() ability to process custom code before and after the primary iterator via `header` and `footer` properties of the callbacks return object. [jddalton]

* Merge compileGroup() and compileSingle() into compileSelector(). [jddalton]

* Ensure `lastNormalized` isn't modifed by selector optimizations in select_regular(). [jddalton]

* Make `re_optimizeByRemoval` use `str_identifier`, fork byClass()/byName()/byTag() based on feature tests, and remove compiled nodeType checks by making byTag() filter non-elements. [Diego Perini, jddalton]

* Revert `NATIVE_SLICE_PROTO` feature test to check first element of the array because Safari 2.0 returns an Array with undefined values in it. [Diego Perini]

* Make compileSelector() pass `match, source, mode, selector` to callbacks. [jddalton]

* Add `HOST_DOC` to ensure `ctx_doc` is reset when not passing a context to match()/select(). [jddalton]

* Revert to character comparisons using `@` for non-element nodes. [Diego Perini]

* Add persisted `lastNormalized` variable, remove `normSelector` and `origSelector` from select_regular() and match(). [jddalton]

* Make match() return false if an element is not provided. [jddalton]

* Move regexps off the `Optimize` object and ensure context is only matched in a selector where it's assumed. [jddalton]
  For example element `<div><li><em>foo</em></li></div>` would return results for select('> li em', div) but not select('div li em', div).

* unit test: Update Slick tests and add Slick YUI specs. [jddalton]

* Tweak byName() to maintain its speed and still pass unit tests. [jddalton]

* Add support for the CSS3 lang pseudo-class. [Diego Perini, jddalton]

* Escape quotes when compiling attribute, `:not`, and `:contains` selectors. [jddalton]

* Standardize variable names with prefixes:
  `ctx` for context vars, `str` for string, `re` for regexps, `cpl` for compiler constants, `test` for simulated regexp tests, and `cache`. [jddalton]

* Tweak compiled source for ancestor and child combinators. [Diego Perini, jddalton]

* Make compileSelector() compile context specific functions, but only cache those from contexts that match the host document type. [Diego Perini, jddalton]

* Tweak byId(), avoid byTag() when possible, fix minor `RE_SIMPLE_SELECTOR` regression, and simplify gEBN bug checks. [jddalton]

* Remove `this` dependency from setQSA() and rename `RE_BUGGY_QSAPI` to `RE_BUGGY_QSA`. [Diego Perini, jddalton]

* Add support for performing selectors on document fragments by treating them as `notHTML`. [jddalton]

* Tweak compiled id/tag selector code and ensure s.getAttribute() returns an empty string when getAttributeNode() is null. [jddalton]

* Remove registerSelector()/registerOperator() API and expose NW.Dom.Selectors/NW.Dom.Operators allowing developers to overwrite the default selectors with custom ones. [jddalton]

* Ensure select()/match() return an empty array/false for unsupported/invalid selectors. [jddalton]

* Make the definition of `RE_SIMPLE_SELECTOR` more granular, tweak private byName() usage for IE, and simplify the public byClass(), byName(), and byTag(). [jddalton]

* Ensure compileSelector() handles tag selectors as case-insensitive for non-html elements. [jddalton]

* Make non-html elements in byClass() and byName() use client_api() instead of select() and avoid an infinite loop in the `NAME optimization RTL` section of client_api(). [jddalton]

* Add `NAME optimization RTL` to client_api(). [jddalton]

* Change `notHTML` from `!('body' in doc)` to `!('body' in doc) || !('innerHTML' in root)` to correct the feature test for WebKit. [jddalton]

* Make compileSelector() use getAttribute() for ID selectors on non-html elements. [Diego Perini, jddalton]

* Fix Opera 9.25 bug by ensuring compileSelector() checks `e.nodeType==1` before attempting (get/has)Attribute and tweak `reUnnormalized` and `reValidator` regexps. [jddalton]

* Rewrite byName(), fix `NATIVE_GEBN` check and add feature tests for `BUGGY_GEBN_MATCH_ID`, `BUGGY_GEBN_WITH_ID_LENGTH`, and `BUGGY_GEBN_WITH_NON_INPUT`. [jddalton]

* Fix regression in `strSkipGroups` that stopped NWMatcher running in Chrome. [jddalton]

* Remove `cn.length` check in byClass() because non-html elements are handled elsewhere and rename `cn` to `n` for better compression with other `n` variables. [jddalton]

* Perform `e.type` before the `"form" in e` check to resolve `:enabled` and `:disabled` dynamic pseudos faster. [Diego Perini]

* Refactor attribute resolver in compileSelector() to avoid unneeded String#replace calls and other operations. [Diego Perini, jddalton]

* Define compile() and setQSA() as private methods in the `DEBUG API` section and ensure exposed byClass(), byName(), and byTag(), return array values. [Diego Perini, jddalton]

* Merge `compatMode` into `isQuirks` to reduce a variable. [Diego Perini] 

* Make all loops use `element` and `elements` variables for better compression and bump datestamp. [Diego Perini, jddalton]

* Replace `NATIVE_SLICE_PROTO` feature test with one from kangax's CFT. [Diego Perini, kangax]

* Avoid infinite loop for non html elements in byName(). [jddalton]

* Tweak byTag(), byName(), byClass(), select_qsa(), client_api(), and `reNameValue` to gain performance. [jddalton]

* Add `[name=...]` to the `RE_SIMPLE_SELECTOR` regexp. [jddalton]

* Ensure byName() returns an array of elements. [jddalton]

* Fix jQuery adapter regression in `even`, `odd`, `eq`, `lt`, and `gt` pseudo selectors. [jddalton]

* Reduce variables used in compileSelector(), replace a compatMode check with `isQuirks` and modify a couple code comments. [jddalton]

* Make compileSelector() ensure element exists before checking nodeType on adjacent sibling selectors. [jddalton]

* Make `UID`'s property name harder to conflict with. [Diego Perini, jddalton]

* Fix `BUGGY_GEBID` feature test. [Diego Perini, jddalton]

* Removed strict check for (even/odd) in the Patterns.spseudos regexp and simplify regexps in the `an+b` processing in compileSelector(). [Diego Perini, jddalton]

* Rename variable `isClassNameLowered` to `isQuirks`. [Diego Perini]

* Fix `RE_BUGGY_QSAPI` class attribute feature test and correct Dojo unit tests. [jddalton]

* Fix regression in compileSelector() and make Patterns.attribute use a non-greedy `.*?`. [jddalton]

* Ensure `:enabled` and `:disabled` dynamic pseudos only match elements with a `type` property to avoid false positives on LABEL elements. [jddalton]

* Rename `base` to `doc`, `doc` variable is updated for each selection so the in-line tests all references the ownerDocument of the scrutinized elements. [Diego Perini, kangax]

* Refine regexp used in stripTags(), Patterns.attribute, Patterns.dpseudos, `reSiblings`, `reSplitGroup`, `reLastToken`, `reUnnormalized`, `reUseSafeNormalize`, `reValidator`, `RE_BUGGY_MUTATION`, and `RE_SIMPLE_SELECTOR`. [jddalton]

* Rename `strEncoding` to `strIdentifier`, `strSkipGroup` to strSkipGroups, `reClassValue` to `reIdentifier`, and `reSplitToken` to `reLastToken`. [jddalton]

* Modify the compiler to reduce the number of times it checks nodeName/nodeType values. [jddalton]

* Revert to using `in` operator when resolving `:enabled` and `:disabled` dynamic pseudo classes on control elements. [Diego Perini]

* Fix regression in `reSplitGroup` and allow escaped characters in `reSplitGroup`, `reSplitToken`, Patterns.attribute, and Patterns.dpseudos. [jddalton, pdanpdan]

* Rename prop `CSS_ID` to `UID` and use native element.unqiueID if available. [jddalton]

* Rewrite structural pseudo class resolver in the compiler to better match QSA behavior and results. [Diego Perini]

* Ensure element.type exists before calling toLowerCase() on it for `:enabled` and `:disabled` pseudos. [jddalton]

* Rename `NATIVE_QSAPI` to `NATIVE_QSA` and test for querySelectorAll() instead of querySelector(). [jddalton]

* Avoid resetting current element in the first iteration of compileGroup() and rename `native_api` to `select_simple`. [Diego Perini, jddalton]

* Remove duplicate `context` variable and use `base` instead. [Diego Perini]

* Add `NATIVE_HAS_FOCUS` variable. [Diego Perini]

* Switch remaining `element.nodeType==1` to `element.nodeName.charCodeAt(0)>64`. [Diego Perini]

* Tweak regexp used in the CSS3 `:checked` pseudo, ensure the element.form exists and element.type checks in `:enabled`, `:disabled`, and `:checked` are case-insensitive, remove `isLink()` from the `:disabled` check, and remove element.type checks from `:focus`. [jddalton]

* Switch to `element.nodeName.charCodeAt(0)` instead of `element.nodeName.charAt(0)`. [jddalton]

* Remove `in` operator checks on control elements and test hasFocus() method exists before using it. [Diego Perini, jddalton]

* Avoid checking for strict booleans on control elements, they are actually strings if set in the source HTML as attribute values. [Diego Perini]

* Reduce code in normalize() and make forEachCall() use `++i` and replace repeated string in compileSelector() with `strEdgeSpace`. [jddalton]

* Ensure escaped commas are not parsed and simplify the `reSplitGroup` and `reSplitToken` regexps. [jddalton]

* Move Prototype unit test adapter into its own file. [jddalton]

* Cleanup jQuery adapters and ensure compiled variable `j` is the index of the current element being processed. [jddalton]

* Ensure querySelectorAll() is skipped on non-html documents. [jddalton]

* Fix byId() performance regression. [jddalton]

* Add feature test to `RE_BUGGY_QSAPI` for Safari 3.2 failing to find mixed cased classNames. [jddalton, Thomas Aylott]

* Ensure `BUGGY_GEBID` uses unique id values in its feature test. [jddalton]

* Add support for class, id, name, and tag selectors on non-html documents. [jddalton]

* Prepare byClass(), byId(), byName(), and byTag() to work with the `notHTML` private flag. [jddalton]

* Reduce the number of times String#toUpperCase is used in compilers and switch to `++i` in byName() and byId(). [Diego Perini, jddalton]

* Fix regression in `BUGGY_GEBTN` feature test. [jddalton]

* Fix `NATIVE_TRAVERSAL_API` fork of the structural pseudo-class section of compileSelector(). [jddalton]

* Fix typos in compileSelector() and getChildIndexesByTag() and clear `childIndexes` cache in match(). [jddalton]

* Remove variable `CSS_INDEX` because in IE the `sourceIndex` property can be 0 on disconnected nodes. [jddalton]

* Add cache back to getChildIndexesByTag(). [Diego Perini, jddalton]

* Rename private variable `SKIP_COMMENTS` to `SKIP_NON_ELEMENTS` and filer out comments, document, and invalid elements. [Diego Perini, jddalton, Thomas Aylott]

* Stop non-HTML documents throwing errors by changing checks like `if (from.getElementsByTagName)` to `if ('getElementsByTagName' in from)`. [jddalton]

* Rename private variable `NODE_NAME_TO_UPPER_CASE` to `TO_UPPER_CASE`. [jddalton]

* Ensure selectors like `* > :first-child` and `> :first-child` return the same results. [jddalton]

* Avoid extracting parenthesis around pseudos parameters and having to remove them later [Diego Perini]

* Ensure client_api() doesn't use an optimized selector for the compiled/dom cache. [jddalton]

* Ensure selectors like `.foo > *` and `.foo >` return the same results. [jddalton]

* Assume `context` on selectors like `> h3` which don't specify one. [jddalton]

* Avoid escaping characters that don't need it in regexps and simplify `reSplitGroup` and `reSplitToken`. [jddalton]

* Ensure the div test element is removed from the document. [jddalton]

* Make NWMatcher work when embedded in XHTML or XML documents. [jddalton]

* Ensure ancestor/descendant resolvers don't end on the document node. [Diego Perini]

* Removed the client_api() named expression for Safari 2 support. [Diego Perini]

* Refine the `reValidator` regexp. [jddalton, Diego Perini]

* Remove unused methods getChildren() and getNextSibling(). [Diego Perini]

* Rewrite client_api() to avoid extra optimizations that are handled better by the selector compiler. [Diego Perini, jddalton]

* Add wildcard `*` tagName processing to the `RE_SIMPLE_SELECTOR` regexp for non-IE browsers. [Diego Perini]

* Add `context` fallback to byClass(). [Diego Perini]

* Fix `of-type` selectors when no context is given by removing the `indexesByTag` cache. [Diego Perini]

* Make `RE_BUGGY_QSAPI` filter out selectors that cause IE to throw errors. [jddalton]

* Fix a bug in the compiler for a selector like `.a1 ~ *` throwing an error when the W3C element traversal api is supported. [jddalton]

* unit test: Add Slick XML unit test and fix a bug with JSSpec in Opera 9.64. [jddalton]

* Ensure feature test results return boolean values and make BUGGY_GEBCN test against a string and not a regexp. [jddalton]

* unit test: Add Slick unit tests. [jddalton]

* Add NW.Dom.setQSA(enabled) to allow testing NW.Dom.select() with and without using querySelectorAll(). [jddalton]

* Ensure element.style and element.className exist before attempting to access properties on them. [jddalton]

* Cleanup feature tests making them more consistent. [jddalton]

* Ensure getElementsByClassName(), getElementById(), getElementsByName(), and getElementsByTagName() exist on elements before calling them. [jddalton]

* Optimize prefiltering in client_api() avoding extra processing if `parts[1]` matches are undefined and allow filtering of selectors containing `:not` again. [jddalton]

* Refine `Optimize.tagName` to match more tagName selectors. [jddalton]

* Ensure native_api() returns an array of results for className selectors instead of nodeLists. [jddalton]

* Remove unnecessary grouping from `strSkipQuotes` and remove the `*` from the end of the `Optimize` regexps. [jddalton] 

* Avoid prefiltering in client_api() if the selector contains `:not` and move the `ID optimization LTR` block under the `ID optimization RTL` block. [jddalton]

* Move the client_api() `ID optimization RTL` block into the `reduce selection context` block to reduce tests if Optimize.id isn't matched in the selector. [jddalton]

* Ensure the element returned by gEBID actually has the id in the `reduce selection context` block of client_api(). [jddalton]

* Avoid name.toUpperCase() in getChildIndexesByTag() if possible. [jddalton]

* Remove toLowerCase() call in getAttribute(). [jddalton]

* Cleanup `switch` statements, reduce variable assignments in native_api(), and remove unused parts of ID/TAG optimizations in client_api(). [jddalton]

* Avoid unnecessarily converting the output of byClass() to an array. [jddalton]

* Remove the unused `view` variable and assign `lastContext` a default value of `context`. [jddalton]

* Add the native_api() method to handle simple selectors. [Diego Perini, jddalton]

* Remove the `r` argument from the compiled selectors and make match() support a callback argument. [jddalton]

* Make getChildIndexes() and getChildIndexesByTag() use do-while loops. [jddalton]

* Rename getChildrenIndex() and getChildrenIndexByTag() to getChildIndexes() and getChildIndexesByTag(). [jddalton]

* Rename caching vars `indexesByNodeType` and `indexesByNodeName` to `childIndexes` and `childIndexesByTag`. [jddalton]

* Simplify the `RE_BUGGY_QSAPI` regexp and allow FF to use Array.slice() in concatList(). [jddalton]

* Rename `reSimpleSelector` to `RE_SIMPLE_SELECTOR` and fork to optimize the regexp for IE. [jddalton]

* Remove the `data` argument from NW.Dom.select() because the same functionality can be achieved by the `callback` argument. [jddalton]

* Tweak the `reUnnormalized` regexp and make `RE_BUGGY_MUTATION` match `:disabled` and `:checked`. [jddalton]

* Make match() only process elements that have a `ownerDocument` property to avoid the document object. [jddalton]

* Expose NW.Dom.normalize() for testing purposes and ensure NW.Dom.compile() normalizes the selector. [jddalton]

* Make `reUnNormalized` more procise and ensure client_api() doesn't pave the `data` argument in Firefox. [jddalton]

* unit test: Update Prototype and jQuery unit tests. [jddalton]

* Optimize getChildren() by using a do-while loop instead of a while loop. [jddalton]

* Ensure byClass() coerces element.className to a string before attempting indexOf() because SVG elements have a non-string value for `className`. [jddalton]

* Ensure normalize() performs a quote safe approach if a selector contains `[` or `(`. [jddalton]

* Only normalize selectors that contain edge case whitespace like \t, \n , \r, \f and consecutive spaces. [jddalton]

* Reorganize the definition order of some of the feature test flags. [jddalton]

* Make compileSelector() handle attribute case sensitivity properly. [jddalton]

* Make INSENSITIVE_TABLE defined by feature test instead of docType sniff because many pages are sent with the wrong mime type causing XHTML to be processed as invalid HTML. [jddalton]

* Make client_api() cache empty results. [jddalton]

* Enable dom result caching by fixing how mutation event bugs are handled and rename `BUGGY_QSAPI` to `RE_BUGGY_QSAPI`. [jddalton]

* Optimize client_api() cached performance when passing a callback. [jddalton]

* Optimize client_api() compiled/dom caching. [jddalton]

* Optimize how select_qsa() processes the elements returned from querySelectorAll(). [jddalton]

* Avoid using querySelectorAll() if a compiled selector exists. [jddalton]

* Make the match() method utilize the compiled cache better. [jddalton]

* Ensure the match() method validates the selector. [jddalton]

* Normalize selectors to reduce selector parsing complexity and improve compiled/dom caching memory footprints. [jddalton]

* Avoid setting the `elements` var in client_api() until necessary. [jddalton]

* Make the cache pause timeout equal to the `minCacheRest`. [jddalton]

* Optimize client_api() by avoiding unnecessary property lookups and assignments. [jddalton]

* Optimize compileSelector() by reducing property lookups in the while loop. [jddalton]

* Make `concatList` and `concatCall` perform better in IE. [jddalton]

* Make the `Optimize` object properties names more consistent with the rest of NWMatcher's coding style. [jddalton]

* Simplify feature tests by recycling the div test element and temp vars. [jddalton]

* Use native String#trim if available. [jddalton]

* Reorganize source. [jddalton]

*1.2.0* (November 2, 2009)
